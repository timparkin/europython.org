http://www.pythonware.com/daily/rss.xml
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Daily Python-URL! (from the Secret Labs)</title><link>http://www.pythonware.com/daily/</link><description>Daily news from the Python universe, presented by your friends at Secret Labs.</description><item><title>PHATCH, a PHoto bATCH processor and renamer</title><link>http://www.pythonware.com/daily/#entry6486196500823227935</link><description>&lt;div class="description"&gt;Stani:
&lt;a href="http://photobatch.stani.be"&gt;PHATCH, a PHoto bATCH processor and renamer&lt;/a&gt;
[&lt;i&gt;"I'm pleased to announce the release of Phatch which is a powerful batch processor and renamer. Phatch exposes a big part of the Python Imaging Library through a user-friendly GUI. (It is using python-pyexiv2 to offer more extensive EXIF and IPTC support.) Phatch is not targeted at manipulating individual pictures (such as with Gimp), but repeating the same actions on hundreds or thousands of images."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Mon, 11 Feb 2008 11:21:00 -0000</pubDate><guid>http://www.pythonware.com/daily/6486196500823227935</guid></item><item><title>Offline Development With Django</title><link>http://www.pythonware.com/daily/#entry2682731974138544562</link><description>&lt;div class="description"&gt;Ville S&amp;#228;&amp;#228;vuori:
&lt;a href="http://www.unessa.net/en/hoyci/2008/01/offline-development-with-django/"&gt;Offline Development With Django&lt;/a&gt;
[&lt;i&gt;"Coming to Django from the PHP-world, running a local development server (as opposed to Apache or a full LAMP-machine set up for just testing) and doing real offline development is something that takes a little bit of learning. After two years of active development with Django, I&amp;#8217;d like to share some of my learnings."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Wed, 23 Jan 2008 06:43:00 -0000</pubDate><guid>http://www.pythonware.com/daily/2682731974138544562</guid></item><item><title>TIOBE declares Python as programming language of 2007!</title><link>http://www.pythonware.com/daily/#entry5225373455879067975</link><description>&lt;div class="description"&gt;TIOBE Software:
&lt;a href="http://www.tiobe.com/tpci.htm"&gt;TIOBE declares Python as programming language of 2007!&lt;/a&gt;
[&lt;i&gt;"Python has been declared as programming language of 2007. It was a close finish, but in the end Python appeared to have the largest increase in ratings in one year time (2.04%). There is no clear reason why Python made this huge jump in 2007. Last month Python surpassed Perl for the first time in history, which is an indication that Python has become the "de facto" glue language at system level. It is especially beloved by system administrators and build managers. Chances are high that Python's star will rise further in 2008, thanks to the upcoming release of Python 3."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Sun, 20 Jan 2008 13:09:00 -0000</pubDate><guid>http://www.pythonware.com/daily/5225373455879067975</guid></item><item><title>Spot the warning signs in configuration file design</title><link>http://www.pythonware.com/daily/#entry1789441268516457739</link><description>&lt;div class="description"&gt;Sean McGrath:
&lt;a href="http://www.itworld.com/AppDev/application-design-config-file-design-nlstipsm-080109/index.html"&gt;Spot the warning signs in configuration file design&lt;/a&gt;
[&lt;i&gt;"Put the extra power of programming language-based parameter files into your application. Then see how the parameterization works out in practice. You can work back from there if necessary. For example, I like to use Python syntax for parameterization from the get-go. If I need to, I will write a parser for whatever subset of Python my application ends up using in the real world. But I wait for real-world experience using the application to tell me what that subset is. I don't try to second-guess it."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Sat, 19 Jan 2008 19:48:00 -0000</pubDate><guid>http://www.pythonware.com/daily/1789441268516457739</guid></<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Daily Python-URL! (from the Secret Labs)</title><link>http://www.pythonware.com/daily/</link><description>Daily news from the Python universe, presented by your friends at Secret Labs.</description><item><title>Yet Another Python ORM</title><link>http://www.pythonware.com/daily/#entry4182095175102216447</link><description>&lt;div class="description"&gt;Jared Koult: &lt;a href="http://superjared.com/entry/yet-another-python-orm/"&gt;Yet Another Python ORM&lt;/a&gt;
[&lt;i&gt;"I've developed a Python ORM that is intended to be a lightweight, high-performance alternative to SQLObject, SQLAlchemy, the Django ORM, etc. Each of the preceding projects attempts to implement a comprehensive feature set. This ORM, however, is intended to be minimal, with as minimal of a configuration as required."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Thu, 28 Feb 2008 16:16:00 -0000</pubDate><guid>http://www.pythonware.com/daily/4182095175102216447</guid></item><item><title>A Data Point on Every Block - An Interview with Adrian Holovaty</title><link>http://www.pythonware.com/daily/#entry1055143000992651248</link><description>&lt;div class="description"&gt;Rex Sorgatz:
&lt;a href="http://www.fimoculous.com/archive/post-3860.cfm"&gt;A Data Point on Every Block - An Interview with Adrian Holovaty&lt;/a&gt;
[&lt;i&gt;"Oh, and I should mention that we use Python for everything, from the ground up."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Fri, 15 Feb 2008 08:16:00 -0000</pubDate><guid>http://www.pythonware.com/daily/1055143000992651248</guid></item><item><title>Deadlines for hotel reservations and early-bird registration coming soon!</title><link>http://www.pythonware.com/daily/#entry4132934015102128946</link><description>&lt;div class="description"&gt;PyCon 2008:
&lt;a href="http://pycon.blogspot.com/2008/02/deadlines-for-hotel-reservations-and.html"&gt;Deadlines for hotel reservations and early-bird registration coming soon!&lt;/a&gt;
[&lt;i&gt;"If you haven't registered for PyCon yet, now is the time! The early-bird registration deadline is February 20, one week away. After that, the price for registration will be going up.  The deadline for hotel reservations at the conference rate is also February 20. Act now, because the regular rate is considerably higher!"&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Thu, 14 Feb 2008 20:29:00 -0000</pubDate><guid>http://www.pythonware.com/daily/4132934015102128946</guid></item><item><title>PHATCH, a PHoto bATCH processor and renamer</title><link>http://www.pythonware.com/daily/#entry6486196500823227935</link><description>&lt;div class="description"&gt;Stani:
&lt;a href="http://photobatch.stani.be"&gt;PHATCH, a PHoto bATCH processor and renamer&lt;/a&gt;
[&lt;i&gt;"I'm pleased to announce the release of Phatch which is a powerful batch processor and renamer. Phatch exposes a big part of the Python Imaging Library through a user-friendly GUI. (It is using python-pyexiv2 to offer more extensive EXIF and IPTC support.) Phatch is not targeted at manipulating individual pictures (such as with Gimp), but repeating the same actions on hundreds or thousands of images."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Mon, 11 Feb 2008 11:21:00 -0000</pubDate><guid>http://www.pythonware.com/daily/6486196500823227935</guid></item><item><title>Offline Development With Django</title><link>http://www.pythonware.com/daily/#entry2682731974138544562</link><description>&lt;div class="description"&gt;Ville S&amp;#228;&amp;#228;vuori:
&lt;a href="http://www.unessa.net/en/hoyci/2008/01/offline-development-with-django/"&gt;Offline Development With Django&lt;/a&gt;
[&lt;i&gt;"Coming to Django from the PHP-world, running a local development server (as opposed to Apache or a full LAMP-machine set up for just testing) and doing real offline development is something that takes a little bit of learning. After two years of active development with Django, I&amp;#8217;d like to share some of my learnings."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Wed, 23 Jan 2008 06:43:00 -0000</pubDate><guid>http://www.pythonware.com/daily/2682731974138544562</guid></item><item><title>TIOBE declares Python as programming language of 2007!</title><link>http://www.pythonware.com/daily/#entry5225373455879067975</link><description>&lt;div class="description"&gt;TIOBE Software:
&lt;a href="http://www.tiobe.com/tpci.htm"&gt;TIOBE declares Python as programming language of 2007!&lt;/a&gt;
[&lt;i&gt;"Python has been declared as programming language of 2007. It was a close finish, but in the end Python appeared to have the largest increase in ratings in one year time (2.04%). There is no clear reason why Python made this huge jump in 2007. Last month Python surpassed Perl for the first time in history, which is an indication that Python has become the "de facto" glue language at system level. It is especially beloved by system administrators and build managers. Chances are high that Python's star will rise further in 2008, thanks to the upcoming release of Python 3."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Sun, 20 Jan 2008 13:09:00 -0000</pubDate><guid>http://www.pythonware.com/daily/5225373455879067975</guid></item><item><title>Spot the warning signs in configuration file design</title><link>http://www.pythonware.com/daily/#entry1789441268516457739</link><description>&lt;div class="description"&gt;Sean McGrath:
&lt;a href="http://www.itworld.com/AppDev/application-design-config-file-design-nlstipsm-080109/index.html"&gt;Spot the warning signs in configuration file design&lt;/a&gt;
[&lt;i&gt;"Put the extra power of programming language-based parameter files into your application. Then see how the parameterization works out in practice. You can work back from there if necessary. For example, I like to use Python syntax for parameterization from the get-go. If I need to, I will write a parser for whatever subset of Python my application ends up using in the real world. But I wait for real-world experience using the application to tell me what that subset is. I don't try to second-guess it."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Sat, 19 Jan 2008 19:48:00 -0000</pubDate><guid>http://www.pythonware.com/daily/1789441268516457739</guid></item><item><title>SimCity Source Code Released to the Wild! Let the ports begin...</title><link>http://www.pythonware.com/daily/#entry2508318918324705672</link><description>&lt;div class="description"&gt;Bil Simser:

&lt;a href="http://weblogs.asp.net/bsimser/archive/2008/01/10/simcity-source-code-released-to-the-wild-let-the-ports-begin.aspx"&gt;SimCity Source Code Released to the Wild! Let the ports begin...&lt;/a&gt;

[&lt;i&gt;"The 'MicropolisCore' project includes the latest Micropolis (SimCity) source code, cleaned up and recast into C++ classes, integrated into Python, using the wonderful SWIG interface generator tool. It also includes a Cairo based TileEngine, and a cellular automata machine CellEngine, which are independent but can be plugged together, so the tile engine can display cellular automata cells as well as SimCity tiles, or any other application's tiles."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Tue, 15 Jan 2008 18:23:00 -0000</pubDate><guid>http://www.pythonware.com/daily/2508318918324705672</guid></item><item><title>Functional Roman Numerals in Python</title><link>http://www.pythonware.com/daily/#entry6183663176452636124</link><description>&lt;div class="description"&gt;Bill Mill:
&lt;a href="http://billmill.org/python_roman.html"&gt;Functional Roman Numerals in Python&lt;/a&gt;
[&lt;i&gt;"Just as a quck note, I thought I'd post the cleanest python I could come up with to solve the roman numerals problem I discussed earlier. It tries to use a functional style while actually avoiding recursion. To do so, I wrote an iterative python unfold /.../"&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Sun, 13 Jan 2008 16:54:00 -0000</pubDate><guid>http://www.pythonware.com/daily/6183663176452636124</guid></item><item><title>A Simple Plugin Framework</title><link>http://www.pythonware.com/daily/#entry5782106856683812491</link><description>&lt;div class="description"&gt;Marty Alchin:
&lt;a href="http://gulopine.gamemusic.org/2008/jan/10/simple-plugin-framework/"&gt;A Simple Plugin Framework&lt;/a&gt;
[&lt;i&gt;"So, what does it really take to implement a plugin 'architecture'? Outside the framework, when implementing plugins themselves, there are three things that are really necessary: 1. A way to declare a mount point for plugins. /.../ 2. A way to register a plugin at a particular mount point. /.../ 3. A way to retrieve the plugins that have been registered. That may seem like an incredibly complicated task, and it certainly could be, as evidenced by the Zope implementation of the above requirements. But it can actually be done in just 6 lines of Python. This may seem impossible, but the following code successfully fulfills all three of the above requirements. "&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Fri, 11 Jan 2008 10:18:00 -0000</pubDate><guid>http://www.pythonware.com/daily/5782106856683812491</guid></item><item><title>Good architectural layering, and Bzr 1.1</title><link>http://www.pythonware.com/daily/#entry7012886995502601326</link><description>&lt;div class="description"&gt;Mark Shuttleworth:
&lt;a href="http://www.markshuttleworth.com/archives/136"&gt;Good architectural layering, and Bzr 1.1&lt;/a&gt;
[&lt;i&gt;"I completely failed to blog the release of Bzr 1.0 last year, but it was an excellent milestone and by all accounts, very well received. Congratulations to the Bazaar community on their momentum! I believe that the freeze for 1.1 is in place now so it&amp;#8217;s great to see that they are going to continue to deliver regular releases."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Wed, 09 Jan 2008 18:51:00 -0000</pubDate><guid>http://www.pythonware.com/daily/7012886995502601326</guid></item><item><title>StaticGenerator for Django</title><link>http://www.pythonware.com/daily/#entry9037270869832560602</link><description>&lt;div class="description"&gt;Jared Kuolt:
&lt;a href="http://superjared.com/projects/static-generator/"&gt;StaticGenerator for Django&lt;/a&gt;
[&lt;i&gt;"How many CPU cycles do you suppose are wasted on blogs that are generated every request? Wouldn&amp;#8217;t it make more sense to generate them only when they&amp;#8217;re updated?  StaticGenerator is a Python class for Django that makes it easy to create static files for lightning fast performance."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Mon, 07 Jan 2008 23:42:00 -0000</pubDate><guid>http://www.pythonware.com/daily/9037270869832560602</guid></item><item><title>Application development for the OLPC laptop</title><link>http://www.pythonware.com/daily/#entry1182365406730843669</link><description>&lt;div class="description"&gt;M. Tim Jones:
&lt;a href="http://www.ibm.com/developerworks/linux/edu/l-dw-linux-xo-python-i.html?ca=dgr-lnxw01OLPCAppDev"&gt;Application development for the OLPC laptop&lt;/a&gt;
[&lt;i&gt;"The XO laptop (of the One-Laptop-Per-Child initiative) is an inexpensive laptop project intended to help educate children around the world. /.../
In this tutorial, you learn about the XO laptop and how to write a Python activity using the Sugar UI. Along the way, you learn more about the XO laptop, its architecture, internals, and use."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Sun, 06 Jan 2008 22:13:00 -0000</pubDate><guid>http://www.pythonware.com/daily/1182365406730843669</guid></item><item><title>Cache Channels Beta</title><link>http://www.pythonware.com/daily/#entry3360528494840990949</link><description>&lt;div class="description"&gt;Mark Nottingham: &lt;a href="http://www.mnot.net/blog/2008/01/04/cache_channels"&gt;Cache Channels Beta&lt;/a&gt;
[&lt;i&gt;"This specification defines "cache channels" to propagate out-of-band events from HTTP origin servers (or their delegates) to subscribing caches.  It also defines an event payload that gives finer-grained control over cache freshness."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Sat, 05 Jan 2008 18:51:00 -0000</pubDate><guid>http://www.pythonware.com/daily/3360528494840990949</guid></item><item><title>TrueCrypt explained</title><link>http://www.pythonware.com/daily/#entry4508339004860375209</link><description>&lt;div class="description"&gt;Bj&amp;#246;rn Edstr&amp;#246;m:
&lt;a href="http://blog.bjrn.se/2008/01/truecrypt-explained.html"&gt;TrueCrypt explained&lt;/a&gt;
[&lt;i&gt;"The most popular cryptographic software for Windows is probably TrueCrypt. In this article I will explain how TrueCrypt works and as a by-product a working Python implementation will be provided. This article is written from a programmer perspective and the math will be kept to the minimum. The emphasis is on how TrueCrypt uses cryptographic primitives such as AES and SHA-1, not how the primitives themselves work."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Fri, 04 Jan 2008 23:44:00 -0000</pubDate><guid>http://www.pythonware.com/daily/4508339004860375209</guid></item><item><title>Django on Jython: Minding the Gap</title><link>http://www.pythonware.com/daily/#entry1971627461759681139</link><description>&lt;div class="description"&gt;Jim Baker:
&lt;a href="http://zyasoft.com/pythoneering/2008/01/django-on-jython-minding-gap.html"&gt;Django on Jython: Minding the Gap&lt;/a&gt;
[&lt;i&gt;"The most important thing to know about Django on Jython is that we are almost there, and with clean code. End-to-end functionality is demonstrated by the admin tool running in full CRUD, along with a substantial number of unit tests and syncdb. But this has been achieved by so far requiring only 6 lines of code in changes to Django trunk."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Fri, 04 Jan 2008 09:30:00 -0000</pubDate><guid>http://www.pythonware.com/daily/1971627461759681139</guid></item><item><title>Utility Mill</title><link>http://www.pythonware.com/daily/#entry1215717436982601984</link><description>&lt;div class="description"&gt;Blended Technologies:
&lt;a href="http://utilitymill.com/"&gt;Utility Mill&lt;/a&gt;
[&lt;i&gt;"Make New Web Utilities Fast: Inputs and outputs are handled for you automatically, you just supply the Python code that does something new."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Fri, 04 Jan 2008 08:40:00 -0000</pubDate><guid>http://www.pythonware.com/daily/1215717436982601984</guid></item><item><title>Poorly Python</title><link>http://www.pythonware.com/daily/#entry2635338156352236626</link><description>&lt;div class="description"&gt;&lt;a href="http://news.bbc.co.uk/2/hi/in_pictures/7169174.stm"&gt;Poorly Python&lt;/a&gt;&lt;/div&gt;</description><pubDate>Thu, 03 Jan 2008 10:32:00 -0000</pubDate><guid>http://www.pythonware.com/daily/2635338156352236626</guid></item><item><title>Adaptive Replacement Cache in Python</title><link>http://www.pythonware.com/daily/#entry629905595687633442</link><description>&lt;div class="description"&gt;Jesper Noehr:
&lt;a href="http://noehr.org/2008/01/adaptive_replacement_cache_in_1.html"&gt;Adaptive Replacement Cache in Python&lt;/a&gt;
[&lt;i&gt;"So what&amp;#8217;s an ARC? Well, it&amp;#8217;s basically a more sophisticated caching algorithm, which sort of, kind of, looks like a MRU/LRU. We&amp;#8217;ll try go explain it in further detail here, and also provide a Python implementation."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Wed, 02 Jan 2008 11:31:00 -0000</pubDate><guid>http://www.pythonware.com/daily/629905595687633442</guid></item><item><title>Exploring Python Bytecode</title><link>http://www.pythonware.com/daily/#entry7595863576312646612</link><description>&lt;div class="description"&gt;Ananth Shrinivas:
&lt;a href="http://thermalnoise.wordpress.com/2007/12/30/exploring-python-bytecode/"&gt;Exploring Python Bytecode&lt;/a&gt;
[&lt;i&gt;"For the past month or so, I&amp;#8217;ve been trying to understand what appears to be a black art mostly because of lacking documentation - Python bytecode generation and peephole optimization. Some notes from the study for the benefit of IRC-mate &amp;#8216;jstatm&amp;#8217; and anyone else living on similar planes of insanity."&lt;/i&gt;]&lt;/div&gt;</description><pubDate>Tue, 01 Jan 2008 23:38:00 -0000</pubDate><guid>http://www.pythonware.com/daily/7595863576312646612</guid></item></channel></rss>